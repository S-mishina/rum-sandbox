logging {
  level  = "debug"
  format = "logfmt"
}

otelcol.receiver.opencensus "traces" {
  endpoint  = "0.0.0.0:55678"
  transport = "tcp"
  output {
    traces = [otelcol.processor.batch.traces.input]
  }
}

otelcol.receiver.otlp "traces" {
  grpc {
    endpoint = "0.0.0.0:14317"
  }

  http {
    endpoint = "0.0.0.0:14318"
  }
  output {
    traces = [otelcol.processor.attributes.traces.input]
  }
}

otelcol.processor.attributes "traces" {
  action {
    key    = "cluster_name"
    value  = "dev-cluster"
    action = "insert"
  }
  output {
    traces = [otelcol.processor.batch.traces.input]
  }
}

otelcol.processor.batch "traces" {
  output {
    traces = [otelcol.exporter.otlp.traces.input]
  }
}

otelcol.exporter.otlp "traces" {
  client {
    endpoint = "http://tempo:4317"
    tls {
      insecure             = true
      insecure_skip_verify = true
    }
  }
}

faro.receiver "integrations_app_agent_receiver" {
    server {
        listen_address           = "0.0.0.0"
        listen_port              = 12346
        max_allowed_payload_size = "10MiB"
        cors_allowed_origins     = ["*"]
        rate_limiting {
            rate = 100
        }
    }
    output {
        traces = [otelcol.exporter.otlp.trace_write.input]
        logs   = [loki.process.logs_process_client.receiver]
    }
}

otelcol.exporter.otlp "trace_write" {
    retry_on_failure {
        max_elapsed_time = "1m0s"
    }

    client {
        endpoint = "http://tempo:4317"
    }
}

loki.process "logs_process_client" {
    forward_to = [loki.write.logs_write_client.receiver]
    stage.labels {
        values = { "kind" = "kind", "service_name" = "service_name", "app" = "app" }
    }
}

loki.write "logs_write_client" {
    endpoint {
        url = "http://loki:3100/loki/api/v1/push"
    }

  external_labels = {
    job = "faro",
    app_name = "",
    app_environment = "",
    kind = "",
  }
}
